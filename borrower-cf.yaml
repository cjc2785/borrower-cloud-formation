---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Borrower microservice infrastructure formation'
Parameters:
  DbUrl:
    Type: String
  DbUser:
    Type: String
  DbPassword:
    Type: String
  BorrowerPort: 
    Type: Number
    Default: 8083
    ConstraintDescription: Must be a valid port number
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceAMI:
    Description: Managed AMI ID for EC2 Instance
    Type : String
    Default: ami-0c322300a1dd5dc79
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.micro:
      Arch: NATHVM64
Resources:
  BorrowerInstanceASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      LaunchConfigurationName:
        Ref: BorrowerInstanceLC
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
      - Ref: BorrowerELB
  BorrowerInstanceLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: InstanceAMI
      SecurityGroups:
      - Ref: BorrowerInstanceSG
      InstanceType:
        Ref: InstanceType
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash"
            - "\n"
            - 'sudo yum install git -y'
            - "\n"
            - 'sudo yum install java-1.8.0-openjdk -y'
            - "\n"
            - 'sudo yum install maven -y'
            - "\n"
            - 'git clone https://github.com/cjc2785/SpringBorrower.git /home/ec2-user/SpringBorrower'
            - "\n"
            - 'export LMS_DB_URL='
            - Ref: DbUrl
            - "\n"
            - 'export LMS_DB_USER='
            - Ref: DbUser
            - "\n"
            - 'export LMS_DB_PASSWORD='
            - Ref: DbPassword
            - "\n"
            - 'mvn clean package -f /home/ec2-user/SpringBorrower/pom.xml'
            - "\n"
            - 'nohup java -jar /home/ec2-user/SpringBorrower/target/SpringLMS-0.0.1-SNAPSHOT.jar &'
            - "\n"
  BorrowerELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      CrossZone: 'true'
      Listeners:
      - LoadBalancerPort: 80
        InstancePort: 
          Ref: BorrowerPort
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:8083/lms/borrower/health
        HealthyThreshold: 3
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5
  BorrowerInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: SSHLocation
      - IpProtocol: tcp
        FromPort:
          Ref: BorrowerPort
        ToPort: 
          Ref: BorrowerPort
        SourceSecurityGroupOwnerId:
          Fn::GetAtt:
          - BorrowerELB
          - SourceSecurityGroup.OwnerAlias
        SourceSecurityGroupName:
          Fn::GetAtt:
          - BorrowerELB
          - SourceSecurityGroup.GroupName
Outputs:
  URL:
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - BorrowerELB
          - DNSName
